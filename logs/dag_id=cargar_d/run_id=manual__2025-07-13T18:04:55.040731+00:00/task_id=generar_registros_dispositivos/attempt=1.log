{"timestamp":"2025-07-13T18:05:00.517018","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T18:05:00.517558","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_generador_datos.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T18:05:00.560266Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:05:00.560502Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:05:00.560665Z","level":"info","event":"Current task name:generar_registros_dispositivos","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:05:00.560809Z","level":"info","event":"Dag name:cargar_d","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:14:15.920888","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T18:14:15.945592Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:14:15.945800Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:14:15.945897Z","level":"info","event":"Task operator:<Task(PythonOperator): generar_registros_dispositivos>","chan":"stdout","logger":"task"}
