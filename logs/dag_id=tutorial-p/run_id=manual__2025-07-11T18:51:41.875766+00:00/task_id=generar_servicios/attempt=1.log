{"timestamp":"2025-07-11T18:51:43.499415","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T18:51:43.500226","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/test1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T18:51:43.519084","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-11T18:51:43.580555Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.580774Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.580890Z","level":"info","event":"Current task name:generar_servicios","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.580995Z","level":"info","event":"Dag name:tutorial-p","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.581100Z","level":"info","event":"[[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 1], [15, 1], [16, 1], [17, 1], [18, 1], [19, 1], [20, 1], [21, 2], [22, 2], [23, 2], [24, 2], [25, 2], [26, 2], [27, 2], [28, 2], [29, 2], [30, 2], [31, 2], [32, 2], [33, 2], [34, 2], [35, 2], [36, 2], [37, 2], [38, 2], [39, 2], [40, 2], [41, 3], [42, 3], [43, 3], [44, 3], [45, 3], [46, 3], [47, 3], [48, 3], [49, 3], [50, 3], [51, 3], [52, 3], [53, 3], [54, 3], [55, 3], [56, 3], [57, 3], [58, 3], [59, 3], [60, 3], [61, 4], [62, 4], [63, 4], [64, 4], [65, 4], [66, 4], [67, 4], [68, 4], [69, 4], [70, 4], [71, 4], [72, 4], [73, 4], [74, 4], [75, 4], [76, 4], [77, 4], [78, 4], [79, 4], [80, 4], [81, 5], [82, 5], [83, 5], [84, 5], [85, 5], [86, 5], [87, 5], [88, 5], [89, 5], [90, 5], [91, 5], [92, 5], [93, 5], [94, 5], [95, 5], [96, 5], [97, 5], [98, 5], [99, 5], [100, 5]]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.581206Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.581305Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T18:51:43.581405Z","level":"info","event":"Task operator:<Task(PythonOperator): generar_servicios>","chan":"stdout","logger":"task"}
