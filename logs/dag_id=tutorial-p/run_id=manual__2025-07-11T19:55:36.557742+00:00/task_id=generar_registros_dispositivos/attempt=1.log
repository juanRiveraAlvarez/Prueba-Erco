{"timestamp":"2025-07-11T19:55:39.627373","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T19:55:39.628333","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/test1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T19:55:39.706012Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.706318Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.706495Z","level":"info","event":"Current task name:generar_registros_dispositivos","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.706666Z","level":"info","event":"Dag name:tutorial-p","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.706831Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.706992Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.707179Z","level":"info","event":"Task:<Task(PythonOperator): generar_registros_dispositivos>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.707352Z","level":"info","event":"Failure caused by relation \"records\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.707515Z","level":"info","event":"LINE 1: INSERT INTO records (device_id, timestamp, value) VALUES (1,...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.707677Z","level":"info","event":"                    ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.707835Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T19:55:39.666161","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"UndefinedTable","exc_value":"relation \"records\" does not exist\nLINE 1: INSERT INTO records (device_id, timestamp, value) VALUES (1,...\n                    ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/test1.py","lineno":121,"name":"generar_registros_dispositivos"}],"is_group":false,"exceptions":[]}]}
