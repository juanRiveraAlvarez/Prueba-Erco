{"timestamp":"2025-07-13T17:56:28.246544","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T17:56:28.255155","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T17:56:28.326948Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.327330Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.327569Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.327799Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.303700","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T17:56:28.438412Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.438712Z","level":"info","event":"0    275484          1 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.438873Z","level":"info","event":"1    275584          1 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439020Z","level":"info","event":"2    275684          1 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439162Z","level":"info","event":"3    275485          2 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439371Z","level":"info","event":"4    275585          2 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439580Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439781Z","level":"info","event":"295  275682         99 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.439974Z","level":"info","event":"296  275782         99 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.440172Z","level":"info","event":"297  275583        100 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.440370Z","level":"info","event":"298  275683        100 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.440566Z","level":"info","event":"299  275783        100 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.440767Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.441098Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.442782","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"'int' object does not support indexing","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/dag_analisis.py","lineno":84,"name":"deteccion_valores_congelados"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-13T17:56:28.500728Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.501030Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.501217Z","level":"info","event":"Task:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:56:28.501390Z","level":"info","event":"Failure caused by 'int' object does not support indexing","chan":"stdout","logger":"task"}
