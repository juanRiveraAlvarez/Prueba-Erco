{"timestamp":"2025-07-14T01:50:36.629279","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:50:36.630192","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:50:36.657318","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:50:36.685663Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.685917Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.686058Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.686200Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734178Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734378Z","level":"info","event":"0    42001          1 2025-07-09 07:15:00   0.30   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734489Z","level":"info","event":"1    42101          1 2025-07-09 07:30:00   0.19   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734593Z","level":"info","event":"2    42201          1 2025-07-09 07:45:00   2.32   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734702Z","level":"info","event":"3    42002          2 2025-07-09 07:15:00   0.27   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734850Z","level":"info","event":"4    42102          2 2025-07-09 07:30:00   0.27   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.734989Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.735162Z","level":"info","event":"295  42199         99 2025-07-09 07:30:00   0.34   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.735351Z","level":"info","event":"296  42299         99 2025-07-09 07:45:00   0.27   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.735511Z","level":"info","event":"297  42100        100 2025-07-09 07:15:00   0.19   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.735681Z","level":"info","event":"298  42200        100 2025-07-09 07:30:00   0.14   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.735848Z","level":"info","event":"299  42300        100 2025-07-09 07:45:00   0.23   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.736043Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.736210Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.746585Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.747630","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:50:36.774156Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.774390Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:50:36.774527Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
