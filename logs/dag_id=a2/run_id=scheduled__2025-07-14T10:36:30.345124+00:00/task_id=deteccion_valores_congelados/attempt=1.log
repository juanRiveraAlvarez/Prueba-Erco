{"timestamp":"2025-07-14T10:36:33.050092","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:36:33.050788","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:36:33.100841Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.101098Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.101251Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.101401Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.080918","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:36:33.136856Z","level":"info","event":"0      158964","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.137195Z","level":"info","event":"1      158965","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.137422Z","level":"info","event":"2      158966","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.137605Z","level":"info","event":"3      159328","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.137792Z","level":"info","event":"4      159329","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.137981Z","level":"info","event":"        ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.138171Z","level":"info","event":"166    178985","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.138362Z","level":"info","event":"167    178986","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.138561Z","level":"info","event":"168    179036","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.138762Z","level":"info","event":"169    179037","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.138959Z","level":"info","event":"170    179038","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.139149Z","level":"info","event":"Name: id, Length: 171, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.147185Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.148315","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:36:33.177265Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.177576Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:36:33.177765Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
