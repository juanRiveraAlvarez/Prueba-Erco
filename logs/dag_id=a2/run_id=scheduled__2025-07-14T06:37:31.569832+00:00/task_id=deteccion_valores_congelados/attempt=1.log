{"timestamp":"2025-07-14T06:37:34.464339","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T06:37:34.465742","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T06:37:34.584892Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.585317Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.585575Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.585828Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.511585","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T06:37:34.647458Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.647837Z","level":"info","event":"0     85459          1 2025-07-07 17:30:00  231.19   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648050Z","level":"info","event":"1     85460          1 2025-07-07 17:45:00  231.38   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648249Z","level":"info","event":"2    121801          1 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648446Z","level":"info","event":"3     85823          2 2025-07-07 17:30:00  212.15   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648628Z","level":"info","event":"4     85824          2 2025-07-07 17:45:00  212.31   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648812Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.648996Z","level":"info","event":"295  121132         99 2025-07-07 17:45:00  222.89   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.649179Z","level":"info","event":"296  121899         99 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.649357Z","level":"info","event":"297  121495        100 2025-07-07 17:30:00  215.41   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.649537Z","level":"info","event":"298  121496        100 2025-07-07 17:45:00  215.67   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.649715Z","level":"info","event":"299  121900        100 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.649897Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.650077Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.676536Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.678608","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T06:37:34.723493Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.723897Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:37:34.724166Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
