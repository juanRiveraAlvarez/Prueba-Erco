{"timestamp":"2025-07-14T01:21:35.507863","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:21:35.508448","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:21:35.533311","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:21:35.576500Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.576708Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.576810Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.576905Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.606589Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.606827Z","level":"info","event":"0    39101          1 2025-07-08 12:45:00   1.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.606923Z","level":"info","event":"1    39201          1 2025-07-08 13:00:00   1.42   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607012Z","level":"info","event":"2    39301          1 2025-07-08 13:15:00   1.43   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607102Z","level":"info","event":"3    39102          2 2025-07-08 12:45:00   0.70   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607188Z","level":"info","event":"4    39202          2 2025-07-08 13:00:00   1.09   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607300Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607394Z","level":"info","event":"295  39299         99 2025-07-08 13:00:00   1.42   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607478Z","level":"info","event":"296  39399         99 2025-07-08 13:15:00   0.79   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607562Z","level":"info","event":"297  39200        100 2025-07-08 12:45:00   0.89   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607645Z","level":"info","event":"298  39300        100 2025-07-08 13:00:00   1.33   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607728Z","level":"info","event":"299  39400        100 2025-07-08 13:15:00   1.09   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607812Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.607895Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.618825Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.619480","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:21:35.649038Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.649247Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:21:35.649360Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
