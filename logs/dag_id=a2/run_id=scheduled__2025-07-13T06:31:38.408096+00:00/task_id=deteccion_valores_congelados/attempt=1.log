{"timestamp":"2025-07-13T06:31:42.317653","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T06:31:42.319286","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T06:31:42.421986Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.422381Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.422641Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.422898Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.393923","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T06:31:42.537287Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.537719Z","level":"info","event":"0    232884          1 2025-07-08 12:00:00   1.00   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.538040Z","level":"info","event":"1    232984          1 2025-07-08 12:15:00   1.14   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.538308Z","level":"info","event":"2    233084          1 2025-07-08 12:30:00   1.19   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.538562Z","level":"info","event":"3    232885          2 2025-07-08 12:00:00   0.81   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.538809Z","level":"info","event":"4    232985          2 2025-07-08 12:15:00   1.02   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.539064Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.539317Z","level":"info","event":"295  233082         99 2025-07-08 12:15:00   0.51   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.539545Z","level":"info","event":"296  233182         99 2025-07-08 12:30:00   0.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.539788Z","level":"info","event":"297  232983        100 2025-07-08 12:00:00   0.57   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.540034Z","level":"info","event":"298  233083        100 2025-07-08 12:15:00   1.37   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.540270Z","level":"info","event":"299  233183        100 2025-07-08 12:30:00   0.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.540516Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.540762Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.569526Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.571589","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T06:31:42.616870Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.617282Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:31:42.617536Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
