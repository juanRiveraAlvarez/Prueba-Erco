{"timestamp":"2025-07-13T15:13:51.816053","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:13:51.818240","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:13:51.887346Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:51.887737Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:51.888014Z","level":"info","event":"Current task name:detectar_pico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:51.888246Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:51.858749","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:96: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  ultimos_df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:13:51.884782","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:103: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  historico_df = pd.read_sql(\"SELECT * FROM franja_valores_historicos\", conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:13:52.028426Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.033766Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.039750Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.046924Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.052121Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.056117Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.060472Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.064556Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.070370Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.075139Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.078988Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.083554Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.088846Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.092584Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.096999Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.102167Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.106872Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.110632Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.114444Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.118660Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.123058Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.127119Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.131341Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.135114Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.139772Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.144414Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.148612Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.153340Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.158339Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.162612Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.168013Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.172803Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.178671Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.182621Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.188154Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.192918Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.198729Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.202611Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.206589Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.210878Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.215656Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.220265Z","level":"info","event":"atipico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.224454Z","level":"info","event":"breve","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.226105","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:13:52.272856Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.273243Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:52.273494Z","level":"info","event":"Task operator:<Task(PythonOperator): detectar_pico>","chan":"stdout","logger":"task"}
