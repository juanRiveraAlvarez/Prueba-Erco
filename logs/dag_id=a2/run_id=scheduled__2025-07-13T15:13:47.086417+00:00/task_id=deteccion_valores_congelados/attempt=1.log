{"timestamp":"2025-07-13T15:13:49.503962","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:13:49.506925","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:13:49.585414Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.585760Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.585984Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.586257Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.636591","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:13:49.746273Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.746707Z","level":"info","event":"0    234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.753683Z","level":"info","event":"1    234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.754062Z","level":"info","event":"2    234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.754350Z","level":"info","event":"3    234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.757015Z","level":"info","event":"4    234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.757300Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.757532Z","level":"info","event":"124  248966         42 2025-07-07 17:30:00  233.75   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.757775Z","level":"info","event":"125  248967         42 2025-07-07 17:45:00  234.10   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.760127Z","level":"info","event":"126  248997         43 2025-07-01 12:15:00   15.43   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.760433Z","level":"info","event":"127  248998         43 2025-07-01 12:30:00   16.08   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.760738Z","level":"info","event":"128  248999         43 2025-07-01 12:45:00   17.04   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.760982Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.761390Z","level":"info","event":"[129 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.768854Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.771118","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:13:49.836459Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.837212Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:13:49.837462Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
