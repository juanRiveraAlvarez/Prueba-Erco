{"timestamp":"2025-07-13T00:09:32.983817","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:09:32.984731","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:09:33.044335Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.044612Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.044804Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.044968Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.017119","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:09:33.122589Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.122991Z","level":"info","event":"0    231084          1 2025-07-08 07:30:00   0.19   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.123275Z","level":"info","event":"1    231184          1 2025-07-08 07:45:00   0.17   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.123554Z","level":"info","event":"2    231284          1 2025-07-08 08:00:00   0.61   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.123839Z","level":"info","event":"3    231085          2 2025-07-08 07:30:00   0.19   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.124118Z","level":"info","event":"4    231185          2 2025-07-08 07:45:00   0.33   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.124739Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.124986Z","level":"info","event":"295  231282         99 2025-07-08 07:45:00   0.33   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.125200Z","level":"info","event":"296  231382         99 2025-07-08 08:00:00   0.50   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.125373Z","level":"info","event":"297  231183        100 2025-07-08 07:30:00   0.23   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.125546Z","level":"info","event":"298  231283        100 2025-07-08 07:45:00   0.15   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.125718Z","level":"info","event":"299  231383        100 2025-07-08 08:00:00   0.33   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.125890Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.126064Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.140020","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"IndexError","exc_value":"list index out of range","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/dag_analisis.py","lineno":81,"name":"deteccion_valores_congelados"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-13T00:09:33.176785Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.177049Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.177230Z","level":"info","event":"Task:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:09:33.177358Z","level":"info","event":"Failure caused by list index out of range","chan":"stdout","logger":"task"}
