{"timestamp":"2025-07-14T01:31:35.570979","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:31:35.571726","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:31:35.596215","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:31:35.631379Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.631643Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.631820Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.631978Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.685472Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.685672Z","level":"info","event":"0    40101          1 2025-07-08 15:15:00   1.06   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.685779Z","level":"info","event":"1    40201          1 2025-07-08 15:30:00   0.92   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.685876Z","level":"info","event":"2    40301          1 2025-07-08 15:45:00   1.04   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.685971Z","level":"info","event":"3    40102          2 2025-07-08 15:15:00   0.92   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686063Z","level":"info","event":"4    40202          2 2025-07-08 15:30:00   0.66   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686154Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686244Z","level":"info","event":"295  40299         99 2025-07-08 15:30:00   0.73   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686334Z","level":"info","event":"296  40399         99 2025-07-08 15:45:00   0.86   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686424Z","level":"info","event":"297  40200        100 2025-07-08 15:15:00   0.86   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686513Z","level":"info","event":"298  40300        100 2025-07-08 15:30:00   0.90   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686603Z","level":"info","event":"299  40400        100 2025-07-08 15:45:00   0.77   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686692Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.686919Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.702974Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.704381","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:31:35.734185Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.734453Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:31:35.734622Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
