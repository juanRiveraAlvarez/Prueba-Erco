{"timestamp":"2025-07-13T15:14:50.664966","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:14:50.672091","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:14:50.774464Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.774854Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.775124Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.775386Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.763358","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:14:50.871831Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.872256Z","level":"info","event":"0    234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.872552Z","level":"info","event":"1    234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.872799Z","level":"info","event":"2    234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.873055Z","level":"info","event":"3    234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.873287Z","level":"info","event":"4    234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.873520Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.873764Z","level":"info","event":"148  251878         50 2025-07-07 17:30:00  238.67   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.873990Z","level":"info","event":"149  251879         50 2025-07-07 17:45:00  239.03   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.874220Z","level":"info","event":"150  251943         51 2025-07-02 07:45:00   31.72   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.874454Z","level":"info","event":"151  251944         51 2025-07-02 08:00:00   31.99   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.874685Z","level":"info","event":"152  251945         51 2025-07-02 08:15:00   32.73   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.874917Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.875152Z","level":"info","event":"[153 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.892825Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.894894","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:14:50.952769Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.953172Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:14:50.953460Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
