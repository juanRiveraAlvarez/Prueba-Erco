{"timestamp":"2025-07-14T03:49:00.999340","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T03:49:01.000161","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T03:49:01.049877Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.050096Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.050211Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.050317Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.029660","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T03:49:01.061535Z","level":"info","event":"       id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.061740Z","level":"info","event":"0   47658          1 2025-07-07 17:15:00  220.76   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.061853Z","level":"info","event":"1   47659          1 2025-07-07 17:30:00  221.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.061958Z","level":"info","event":"2   47660          1 2025-07-07 17:45:00  221.35   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062062Z","level":"info","event":"3   48022          2 2025-07-07 17:15:00  221.72   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062165Z","level":"info","event":"4   48023          2 2025-07-07 17:30:00  221.90   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062267Z","level":"info","event":"..    ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062369Z","level":"info","event":"61  54939         21 2025-07-07 17:30:00  227.63   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062471Z","level":"info","event":"62  54940         21 2025-07-07 17:45:00  227.98   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062573Z","level":"info","event":"63  55278         22 2025-07-07 11:15:00  197.88   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062674Z","level":"info","event":"64  55279         22 2025-07-07 11:30:00  198.47   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062775Z","level":"info","event":"65  55280         22 2025-07-07 11:45:00  199.19   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.062889Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.063029Z","level":"info","event":"[66 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.064911Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.065723","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T03:49:01.093476Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.093691Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:49:01.093808Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
