{"timestamp":"2025-07-14T10:42:26.851613","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:42:26.852688","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:42:26.925930Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.926259Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.926442Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.926585Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.886844","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:42:26.985403Z","level":"info","event":"0      158964","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.985742Z","level":"info","event":"1      158965","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.985933Z","level":"info","event":"2      158966","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986101Z","level":"info","event":"3      159328","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986262Z","level":"info","event":"4      159329","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986426Z","level":"info","event":"        ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986588Z","level":"info","event":"295    194637","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986745Z","level":"info","event":"296    194638","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.986904Z","level":"info","event":"297    195000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.987061Z","level":"info","event":"298    195001","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.987219Z","level":"info","event":"299    195002","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.987408Z","level":"info","event":"Name: id, Length: 300, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:26.988378","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ValueError","exc_value":"not enough values to unpack (expected 3, got 2)","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/dag_analisis.py","lineno":73,"name":"deteccion_valores_congelados"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-14T10:42:27.033906Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:27.034184Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:27.034391Z","level":"info","event":"Task:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:42:27.034562Z","level":"info","event":"Failure caused by not enough values to unpack (expected 3, got 2)","chan":"stdout","logger":"task"}
