{"timestamp":"2025-07-14T01:54:36.904960","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:54:36.905738","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:54:36.934393","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:54:36.966724Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:36.966956Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:36.967095Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:36.967204Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.015662Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.015941Z","level":"info","event":"0    42401          1 2025-07-09 08:15:00   0.25   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.016125Z","level":"info","event":"1    42501          1 2025-07-09 08:30:00   0.61   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.016308Z","level":"info","event":"2    42601          1 2025-07-09 08:45:00   0.47   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.016493Z","level":"info","event":"3    42402          2 2025-07-09 08:15:00   0.41   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.016661Z","level":"info","event":"4    42502          2 2025-07-09 08:30:00   0.26   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.016834Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017006Z","level":"info","event":"295  42599         99 2025-07-09 08:30:00   0.31   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017179Z","level":"info","event":"296  42699         99 2025-07-09 08:45:00   0.59   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017348Z","level":"info","event":"297  42500        100 2025-07-09 08:15:00   0.32   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017520Z","level":"info","event":"298  42600        100 2025-07-09 08:30:00   0.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017689Z","level":"info","event":"299  42700        100 2025-07-09 08:45:00   0.50   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.017861Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.018036Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.027730Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.028845","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:54:37.055565Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.055788Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:54:37.055916Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
