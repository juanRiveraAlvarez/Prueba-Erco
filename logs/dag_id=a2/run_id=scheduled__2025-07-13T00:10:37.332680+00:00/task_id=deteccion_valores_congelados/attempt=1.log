{"timestamp":"2025-07-13T00:10:39.280145","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:10:39.280938","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:10:39.326723Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.326921Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.327029Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.327130Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.311824","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:10:39.376068Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.376373Z","level":"info","event":"0    231184          1 2025-07-08 07:45:00   0.17   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.376577Z","level":"info","event":"1    231284          1 2025-07-08 08:00:00   0.61   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.376755Z","level":"info","event":"2    231384          1 2025-07-08 08:15:00   0.60   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.376931Z","level":"info","event":"3    231185          2 2025-07-08 07:45:00   0.33   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.377100Z","level":"info","event":"4    231285          2 2025-07-08 08:00:00   0.56   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.377308Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.377477Z","level":"info","event":"295  231382         99 2025-07-08 08:00:00   0.50   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.377642Z","level":"info","event":"296  231482         99 2025-07-08 08:15:00   0.53   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.377882Z","level":"info","event":"297  231283        100 2025-07-08 07:45:00   0.15   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.378150Z","level":"info","event":"298  231383        100 2025-07-08 08:00:00   0.33   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.378410Z","level":"info","event":"299  231483        100 2025-07-08 08:15:00   0.30   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.378678Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.378948Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.387659Z","level":"info","event":"congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.388321","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:10:39.416460Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.416730Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:10:39.416907Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
