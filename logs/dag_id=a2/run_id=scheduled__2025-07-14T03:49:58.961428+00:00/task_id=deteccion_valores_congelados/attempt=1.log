{"timestamp":"2025-07-14T03:50:01.603021","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T03:50:01.603843","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T03:50:01.658612Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.658946Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.659171Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.659432Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.635026","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T03:50:01.678100Z","level":"info","event":"       id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.678478Z","level":"info","event":"0   47658          1 2025-07-07 17:15:00  220.76   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.678725Z","level":"info","event":"1   47659          1 2025-07-07 17:30:00  221.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.678914Z","level":"info","event":"2   47660          1 2025-07-07 17:45:00  221.35   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.679089Z","level":"info","event":"3   48022          2 2025-07-07 17:15:00  221.72   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.679290Z","level":"info","event":"4   48023          2 2025-07-07 17:30:00  221.90   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.679489Z","level":"info","event":"..    ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.679660Z","level":"info","event":"88  58215         30 2025-07-07 17:30:00  217.81   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.679891Z","level":"info","event":"89  58216         30 2025-07-07 17:45:00  218.13   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.680071Z","level":"info","event":"90  58458         31 2025-07-05 13:15:00  144.99   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.680235Z","level":"info","event":"91  58459         31 2025-07-05 13:30:00  146.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.680395Z","level":"info","event":"92  58460         31 2025-07-05 13:45:00  147.05   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.680575Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.680749Z","level":"info","event":"[93 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.684120Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.684965","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T03:50:01.717389Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.717660Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:50:01.717813Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
