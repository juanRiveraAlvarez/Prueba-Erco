{"timestamp":"2025-07-14T10:37:33.176247","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:37:33.180126","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:37:33.244721Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.245004Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.245186Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.245357Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.218312","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:37:33.272468Z","level":"info","event":"0      158964","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.272799Z","level":"info","event":"1      158965","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273010Z","level":"info","event":"2      158966","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273211Z","level":"info","event":"3      159328","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273394Z","level":"info","event":"4      159329","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273613Z","level":"info","event":"        ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273798Z","level":"info","event":"196    182625","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.273958Z","level":"info","event":"197    182626","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.274112Z","level":"info","event":"198    182877","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.274270Z","level":"info","event":"199    182878","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.274435Z","level":"info","event":"200    182879","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.274592Z","level":"info","event":"Name: id, Length: 201, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.284787Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.285799","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:37:33.322105Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.322360Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:37:33.322503Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
