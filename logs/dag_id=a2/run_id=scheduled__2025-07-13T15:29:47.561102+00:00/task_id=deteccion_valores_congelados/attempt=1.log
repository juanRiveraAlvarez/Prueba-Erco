{"timestamp":"2025-07-13T15:29:48.486475","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:29:48.487500","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:29:48.531133Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.531386Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.531536Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.531672Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.512787","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:29:48.574525Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.574776Z","level":"info","event":"0    234043          1 2025-07-07 17:45:00  218.75   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.574924Z","level":"info","event":"1    270384          1 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575078Z","level":"info","event":"2    270484          1 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575228Z","level":"info","event":"3    234407          2 2025-07-07 17:45:00  218.43   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575397Z","level":"info","event":"4    270385          2 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575539Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575682Z","level":"info","event":"295  270482         99 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575822Z","level":"info","event":"296  270582         99 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.575956Z","level":"info","event":"297  270079        100 2025-07-07 17:45:00  225.25   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.576094Z","level":"info","event":"298  270483        100 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.576233Z","level":"info","event":"299  270583        100 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.576372Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.576511Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.586439Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.587378","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:29:48.610720Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.610956Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:29:48.611084Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
