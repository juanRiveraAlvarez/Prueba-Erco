{"timestamp":"2025-07-13T15:12:49.270055","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:12:49.271397","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:12:49.353122Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.353482Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.353741Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.353971Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.313131","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:12:49.387553Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.387887Z","level":"info","event":"0   234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.388108Z","level":"info","event":"1   234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.388315Z","level":"info","event":"2   234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.388530Z","level":"info","event":"3   234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.388739Z","level":"info","event":"4   234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.388954Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.389165Z","level":"info","event":"94  245326         32 2025-07-07 17:30:00  219.10   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.389372Z","level":"info","event":"95  245327         32 2025-07-07 17:45:00  219.41   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.389573Z","level":"info","event":"96  245367         33 2025-07-01 14:45:00   20.69   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.389774Z","level":"info","event":"97  245368         33 2025-07-01 15:00:00   21.74   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.389975Z","level":"info","event":"98  245369         33 2025-07-01 15:15:00   22.28   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.390179Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.390383Z","level":"info","event":"[99 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.398840Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.399442","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:12:49.441887Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.442188Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:12:49.442375Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
