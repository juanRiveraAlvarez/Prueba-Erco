{"timestamp":"2025-07-14T02:12:37.119797","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T02:12:37.120382","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T02:12:37.144643","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T02:12:37.178178Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.178419Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.178574Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.178728Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.209403Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.209654Z","level":"info","event":"0    44201          1 2025-07-09 12:45:00   1.17   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.209769Z","level":"info","event":"1    44301          1 2025-07-09 13:00:00   0.84   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.209886Z","level":"info","event":"2    44401          1 2025-07-09 13:15:00   0.81   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.209992Z","level":"info","event":"3    44202          2 2025-07-09 12:45:00   1.11   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210089Z","level":"info","event":"4    44302          2 2025-07-09 13:00:00   0.61   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210184Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210277Z","level":"info","event":"295  44399         99 2025-07-09 13:00:00   0.53   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210369Z","level":"info","event":"296  44499         99 2025-07-09 13:15:00   1.15   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210462Z","level":"info","event":"297  44300        100 2025-07-09 12:45:00   0.92   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210555Z","level":"info","event":"298  44400        100 2025-07-09 13:00:00   1.01   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210647Z","level":"info","event":"299  44500        100 2025-07-09 13:15:00   0.92   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210742Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.210834Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.220374Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.221052","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T02:12:37.245149Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.245381Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:12:37.245507Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
