{"timestamp":"2025-07-14T00:55:37.420686","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T00:55:37.453873","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T00:55:37.542476Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.542870Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.543111Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.543407Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.547611","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T00:55:37.722065Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.722420Z","level":"info","event":"0      358          1 2025-07-07 17:15:00  216.65   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.722654Z","level":"info","event":"1      359          1 2025-07-07 17:30:00  216.95   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.722860Z","level":"info","event":"2      360          1 2025-07-07 17:45:00  217.30   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.723067Z","level":"info","event":"3      722          2 2025-07-07 17:15:00  235.13   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.723371Z","level":"info","event":"4      723          2 2025-07-07 17:30:00  235.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.723617Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.723819Z","level":"info","event":"295  36431         99 2025-07-07 17:30:00  227.67   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.724009Z","level":"info","event":"296  36432         99 2025-07-07 17:45:00  227.80   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.724198Z","level":"info","event":"297  36794        100 2025-07-07 17:15:00  249.78   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.724973Z","level":"info","event":"298  36795        100 2025-07-07 17:30:00  250.14   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.725203Z","level":"info","event":"299  36796        100 2025-07-07 17:45:00  250.43   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.725395Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.725579Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.789925Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.790854","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T00:55:37.839682Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.840028Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:55:37.840267Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
