{"timestamp":"2025-07-13T00:02:16.313937","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:02:16.314993","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:02:16.364703Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.365005Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.365238Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.365422Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.349982","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:68: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:02:16.431762Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.431992Z","level":"info","event":"0    230984          1 2025-07-08 07:15:00   0.28   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432125Z","level":"info","event":"1    231084          1 2025-07-08 07:30:00   0.19   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432241Z","level":"info","event":"2    231184          1 2025-07-08 07:45:00   0.17   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432356Z","level":"info","event":"3    230985          2 2025-07-08 07:15:00   0.28   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432466Z","level":"info","event":"4    231085          2 2025-07-08 07:30:00   0.19   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432574Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432681Z","level":"info","event":"295  231182         99 2025-07-08 07:30:00   0.27   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432788Z","level":"info","event":"296  231282         99 2025-07-08 07:45:00   0.33   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.432894Z","level":"info","event":"297  231083        100 2025-07-08 07:15:00   0.39   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.433000Z","level":"info","event":"298  231183        100 2025-07-08 07:30:00   0.23   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.433105Z","level":"info","event":"299  231283        100 2025-07-08 07:45:00   0.15   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.433252Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.433385Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.450899Z","level":"info","event":"congelados 36","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.452088","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:02:16.481219Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.481478Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:02:16.481615Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
