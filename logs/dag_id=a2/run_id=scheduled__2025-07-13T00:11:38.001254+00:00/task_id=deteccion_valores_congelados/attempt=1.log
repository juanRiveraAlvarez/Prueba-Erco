{"timestamp":"2025-07-13T00:11:39.322166","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:11:39.323029","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:11:39.406429Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.406758Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.406991Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.407202Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.357518","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:11:39.459293Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.459557Z","level":"info","event":"0    231284          1 2025-07-08 08:00:00   0.61   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.459756Z","level":"info","event":"1    231384          1 2025-07-08 08:15:00   0.60   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.459901Z","level":"info","event":"2    231484          1 2025-07-08 08:30:00   0.38   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460035Z","level":"info","event":"3    231285          2 2025-07-08 08:00:00   0.56   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460173Z","level":"info","event":"4    231385          2 2025-07-08 08:15:00   0.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460305Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460431Z","level":"info","event":"295  231482         99 2025-07-08 08:15:00   0.53   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460555Z","level":"info","event":"296  231582         99 2025-07-08 08:30:00   0.43   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460678Z","level":"info","event":"297  231383        100 2025-07-08 08:00:00   0.33   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460804Z","level":"info","event":"298  231483        100 2025-07-08 08:15:00   0.30   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.460983Z","level":"info","event":"299  231583        100 2025-07-08 08:30:00   0.62   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.461205Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.461405Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.476211Z","level":"info","event":"Hay congelados  []","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.476912","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:11:39.507867Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.508113Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:39.508252Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
