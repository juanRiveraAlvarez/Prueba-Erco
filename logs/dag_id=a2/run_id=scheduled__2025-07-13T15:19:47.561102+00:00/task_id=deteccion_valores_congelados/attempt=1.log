{"timestamp":"2025-07-13T15:19:49.517677","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:19:49.519344","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:19:49.591011Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.591452Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.591784Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.592061Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.574294","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:19:49.715167Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.715592Z","level":"info","event":"0    234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.715849Z","level":"info","event":"1    234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.716094Z","level":"info","event":"2    234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.716376Z","level":"info","event":"3    234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.716605Z","level":"info","event":"4    234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.716835Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.717076Z","level":"info","event":"247  263890         83 2025-07-07 17:30:00  214.82   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.717304Z","level":"info","event":"248  263891         83 2025-07-07 17:45:00  215.17   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.717538Z","level":"info","event":"249  264039         84 2025-07-03 15:45:00   96.82   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.717775Z","level":"info","event":"250  264040         84 2025-07-03 16:00:00   97.45   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.717984Z","level":"info","event":"251  264041         84 2025-07-03 16:15:00   97.97   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.718215Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.718597Z","level":"info","event":"[252 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.742716Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.744801","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:19:49.790836Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.791186Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:19:49.791471Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
