{"timestamp":"2025-07-14T06:38:34.159926","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T06:38:34.160695","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T06:38:34.256037Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.256334Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.256513Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.256686Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.191894","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T06:38:34.301775Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302049Z","level":"info","event":"0     85460          1 2025-07-07 17:45:00  231.38   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302236Z","level":"info","event":"1    121801          1 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302380Z","level":"info","event":"2    121901          1 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302517Z","level":"info","event":"3     85824          2 2025-07-07 17:45:00  212.31   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302646Z","level":"info","event":"4    121802          2 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302772Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.302920Z","level":"info","event":"295  121899         99 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303076Z","level":"info","event":"296  121999         99 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303216Z","level":"info","event":"297  121496        100 2025-07-07 17:45:00  215.67   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303375Z","level":"info","event":"298  121900        100 2025-07-08 07:00:00    0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303503Z","level":"info","event":"299  122000        100 2025-07-08 07:15:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303628Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.303753Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.319988Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.320608","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T06:38:34.349924Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.350219Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T06:38:34.350409Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
