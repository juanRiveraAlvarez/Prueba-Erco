{"timestamp":"2025-07-13T04:17:39.424195","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T04:17:39.424879","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T04:17:39.467147Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.467386Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.467521Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.467635Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.452384","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T04:17:39.507798Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508016Z","level":"info","event":"0    232584          1 2025-07-08 11:15:00   1.01   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508130Z","level":"info","event":"1    232684          1 2025-07-08 11:30:00   0.59   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508228Z","level":"info","event":"2    232784          1 2025-07-08 11:45:00   1.16   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508328Z","level":"info","event":"3    232585          2 2025-07-08 11:15:00   0.68   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508435Z","level":"info","event":"4    232685          2 2025-07-08 11:30:00   0.86   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508582Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508705Z","level":"info","event":"295  232782         99 2025-07-08 11:30:00   0.84   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508810Z","level":"info","event":"296  232882         99 2025-07-08 11:45:00   1.34   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.508924Z","level":"info","event":"297  232683        100 2025-07-08 11:15:00   1.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.509026Z","level":"info","event":"298  232783        100 2025-07-08 11:30:00   0.82   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.509149Z","level":"info","event":"299  232883        100 2025-07-08 11:45:00   1.24   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.509257Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.509356Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.516431Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.517073","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T04:17:39.541188Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.541387Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T04:17:39.541484Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
