{"timestamp":"2025-07-13T00:01:44.133365","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:01:44.134555","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:01:44.203449Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.203746Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.203937Z","level":"info","event":"Current task name:detectar_pico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204111Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204280Z","level":"info","event":"Analizando dispositivo 1, hora: 7, vista: record_device_franja_6_8","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204457Z","level":"info","event":"No se pudo acceder a la vista record_device_franja_6_8: Execution failed on sql '","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204636Z","level":"info","event":"                SELECT value","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204809Z","level":"info","event":"                FROM record_device_franja_6_8","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.204973Z","level":"info","event":"                WHERE device_id = %s","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205156Z","level":"info","event":"            ': relation \"record_device_franja_6_8\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205325Z","level":"info","event":"LINE 3:                 FROM record_device_franja_6_8","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205497Z","level":"info","event":"                             ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205660Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205825Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.205990Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.206155Z","level":"info","event":"Task operator:<Task(PythonOperator): detectar_pico>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:01:44.190463","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:123: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(f\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:01:44.192628","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
