{"timestamp":"2025-07-13T14:51:48.275936","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T14:51:48.276633","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T14:51:48.334542Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.334703Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.334774Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.334840Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.301062","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T14:51:48.353589Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.353874Z","level":"info","event":"0    232984          1 2025-07-08 12:15:00   1.14   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354093Z","level":"info","event":"1    233084          1 2025-07-08 12:30:00   1.19   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354272Z","level":"info","event":"2    233184          1 2025-07-08 12:45:00   0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354451Z","level":"info","event":"3    232985          2 2025-07-08 12:15:00   1.02   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354578Z","level":"info","event":"4    233085          2 2025-07-08 12:30:00   0.66   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354738Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.354928Z","level":"info","event":"295  233182         99 2025-07-08 12:30:00   0.75   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355081Z","level":"info","event":"296  233282         99 2025-07-08 12:45:00   0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355238Z","level":"info","event":"297  233083        100 2025-07-08 12:15:00   1.37   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355445Z","level":"info","event":"298  233183        100 2025-07-08 12:30:00   0.75   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355600Z","level":"info","event":"299  233283        100 2025-07-08 12:45:00   0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355754Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.355896Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.363991Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.364502","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T14:51:48.388258Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.388520Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T14:51:48.388654Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
