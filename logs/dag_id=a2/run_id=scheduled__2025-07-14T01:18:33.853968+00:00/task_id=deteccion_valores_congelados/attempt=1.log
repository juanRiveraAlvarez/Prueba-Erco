{"timestamp":"2025-07-14T01:18:35.611281","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:18:35.611925","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:18:35.633235","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:18:35.673378Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.673584Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.673694Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.673797Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.713496Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.713726Z","level":"info","event":"0    38801          1 2025-07-08 12:00:00   0.98   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.713885Z","level":"info","event":"1    38901          1 2025-07-08 12:15:00   1.47   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714015Z","level":"info","event":"2    39001          1 2025-07-08 12:30:00   0.54   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714150Z","level":"info","event":"3    38802          2 2025-07-08 12:00:00   0.66   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714277Z","level":"info","event":"4    38902          2 2025-07-08 12:15:00   0.52   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714405Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714507Z","level":"info","event":"295  38999         99 2025-07-08 12:15:00   1.16   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714604Z","level":"info","event":"296  39099         99 2025-07-08 12:30:00   1.41   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714698Z","level":"info","event":"297  38900        100 2025-07-08 12:00:00   1.31   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714791Z","level":"info","event":"298  39000        100 2025-07-08 12:15:00   0.55   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714886Z","level":"info","event":"299  39100        100 2025-07-08 12:30:00   1.42   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.714980Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.715074Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.727008Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.727984","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:18:35.754085Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.754287Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:18:35.754429Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
