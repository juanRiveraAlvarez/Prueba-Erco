{"timestamp":"2025-07-14T10:35:32.742578","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:35:32.743506","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:35:32.797448Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.797705Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.797985Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.798131Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.774596","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:35:32.839657Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.839991Z","level":"info","event":"0    158964          1 2025-07-07 17:15:00  209.53   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.840210Z","level":"info","event":"1    158965          1 2025-07-07 17:30:00  209.69   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.840396Z","level":"info","event":"2    158966          1 2025-07-07 17:45:00  209.87   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.840575Z","level":"info","event":"3    159328          2 2025-07-07 17:15:00  229.83   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.840741Z","level":"info","event":"4    159329          2 2025-07-07 17:30:00  229.99   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.840914Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841099Z","level":"info","event":"139  175709         47 2025-07-07 17:30:00  202.78   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841281Z","level":"info","event":"140  175710         47 2025-07-07 17:45:00  202.97   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841454Z","level":"info","event":"141  175992         48 2025-07-06 10:15:00  170.08   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841622Z","level":"info","event":"142  175993         48 2025-07-06 10:30:00  170.62   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841784Z","level":"info","event":"143  175994         48 2025-07-06 10:45:00  171.43   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.841959Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.842267Z","level":"info","event":"[144 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.851192Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.852297","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:35:32.889106Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.889405Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:35:32.889601Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
