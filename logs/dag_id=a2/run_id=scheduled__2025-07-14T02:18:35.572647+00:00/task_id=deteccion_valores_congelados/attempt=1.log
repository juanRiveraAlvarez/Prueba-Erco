{"timestamp":"2025-07-14T02:18:36.639612","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T02:18:36.640439","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T02:18:36.671509","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T02:18:36.701407Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.701656Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.701816Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.701982Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.766584Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.766838Z","level":"info","event":"0    44801          1 2025-07-09 14:15:00   0.45   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.766974Z","level":"info","event":"1    44901          1 2025-07-09 14:30:00   0.52   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767082Z","level":"info","event":"2    45001          1 2025-07-09 14:45:00   1.11   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767190Z","level":"info","event":"3    44802          2 2025-07-09 14:15:00   0.60   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767320Z","level":"info","event":"4    44902          2 2025-07-09 14:30:00   0.64   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767423Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767528Z","level":"info","event":"295  44999         99 2025-07-09 14:30:00   1.19   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767643Z","level":"info","event":"296  45099         99 2025-07-09 14:45:00   0.84   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767751Z","level":"info","event":"297  44900        100 2025-07-09 14:15:00   0.59   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767850Z","level":"info","event":"298  45000        100 2025-07-09 14:30:00   0.85   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.767948Z","level":"info","event":"299  45100        100 2025-07-09 14:45:00   0.71   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.768048Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.768145Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.779190Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.780025","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T02:18:36.805669Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.806098Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:18:36.806275Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
