{"timestamp":"2025-07-14T01:10:36.159790","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:10:36.160748","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:10:36.189351","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:10:36.240462Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.240771Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.240967Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.241141Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.287158Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.287429Z","level":"info","event":"0    38001          1 2025-07-08 10:00:00   0.73   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.287583Z","level":"info","event":"1    38101          1 2025-07-08 10:15:00   0.68   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.287733Z","level":"info","event":"2    38201          1 2025-07-08 10:30:00   1.06   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.287875Z","level":"info","event":"3    38002          2 2025-07-08 10:00:00   0.77   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288008Z","level":"info","event":"4    38102          2 2025-07-08 10:15:00   0.62   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288137Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288262Z","level":"info","event":"295  38199         99 2025-07-08 10:15:00   1.01   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288387Z","level":"info","event":"296  38299         99 2025-07-08 10:30:00   0.91   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288521Z","level":"info","event":"297  38100        100 2025-07-08 10:00:00   0.94   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288656Z","level":"info","event":"298  38200        100 2025-07-08 10:15:00   0.94   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288791Z","level":"info","event":"299  38300        100 2025-07-08 10:30:00   0.60   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.288928Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.289062Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.304652Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.305552","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:10:36.334102Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.334356Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:10:36.334538Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
