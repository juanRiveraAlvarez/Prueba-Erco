{"timestamp":"2025-07-13T00:11:37.502606","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:11:37.503537","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:11:37.553113Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.553378Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.553532Z","level":"info","event":"Current task name:detectar_pico","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.553678Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.553822Z","level":"info","event":"Analizando dispositivo 1, hora: 8, vista: franja_8_a_10","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.558662","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:128: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(f\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:11:37.561093Z","level":"info","event":"No hay suficientes datos hist√≥ricos para analizar.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.562219","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:11:37.589897Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.590139Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:11:37.590288Z","level":"info","event":"Task operator:<Task(PythonOperator): detectar_pico>","chan":"stdout","logger":"task"}
