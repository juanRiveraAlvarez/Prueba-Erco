{"timestamp":"2025-07-13T00:14:39.825458","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:14:39.826328","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:14:39.875451Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.875714Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.875873Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.876013Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.860807","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:14:39.949259Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.949516Z","level":"info","event":"0    231584          1 2025-07-08 08:45:00   0.36   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.949674Z","level":"info","event":"1    231684          1 2025-07-08 09:00:00   0.42   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.949808Z","level":"info","event":"2    231784          1 2025-07-08 09:15:00   0.41   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.949961Z","level":"info","event":"3    231585          2 2025-07-08 08:45:00   0.42   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950105Z","level":"info","event":"4    231685          2 2025-07-08 09:00:00   0.73   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950246Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950391Z","level":"info","event":"295  231782         99 2025-07-08 09:00:00   0.62   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950535Z","level":"info","event":"296  231882         99 2025-07-08 09:15:00   0.99   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950677Z","level":"info","event":"297  231683        100 2025-07-08 08:45:00   0.68   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950816Z","level":"info","event":"298  231783        100 2025-07-08 09:00:00   0.49   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.950951Z","level":"info","event":"299  231883        100 2025-07-08 09:15:00   0.42   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.951099Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.951249Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.962531Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.963358","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:14:39.991602Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.992020Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:14:39.992330Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
