{"timestamp":"2025-07-14T00:53:40.871453","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T00:53:40.885512","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T00:53:41.075446Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.075825Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.076087Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.076320Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:40.966417","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T00:53:41.349320Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.349681Z","level":"info","event":"0      358          1 2025-07-07 17:15:00  216.65   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.349909Z","level":"info","event":"1      359          1 2025-07-07 17:30:00  216.95   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.350117Z","level":"info","event":"2      360          1 2025-07-07 17:45:00  217.30   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.350326Z","level":"info","event":"3      722          2 2025-07-07 17:15:00  235.13   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.350640Z","level":"info","event":"4      723          2 2025-07-07 17:30:00  235.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.350852Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.351056Z","level":"info","event":"259  31863         87 2025-07-07 17:30:00  214.48   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.351257Z","level":"info","event":"260  31864         87 2025-07-07 17:45:00  214.79   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.351490Z","level":"info","event":"261  31914         88 2025-07-01 17:15:00   33.59   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.351687Z","level":"info","event":"262  31915         88 2025-07-01 17:30:00   36.50   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.351892Z","level":"info","event":"263  31916         88 2025-07-01 17:45:00   36.77   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.352097Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.354168Z","level":"info","event":"[264 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.474820Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.476983","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T00:53:41.553312Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.554011Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:53:41.554381Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
