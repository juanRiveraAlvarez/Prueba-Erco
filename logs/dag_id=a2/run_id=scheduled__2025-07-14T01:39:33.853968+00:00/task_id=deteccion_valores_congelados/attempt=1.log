{"timestamp":"2025-07-14T01:39:35.803002","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T01:39:35.803766","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T01:39:35.826354","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T01:39:35.868991Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.869247Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.869404Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.869553Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918053Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918311Z","level":"info","event":"0    40901          1 2025-07-08 17:15:00   0.30   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918464Z","level":"info","event":"1    41001          1 2025-07-08 17:30:00   0.23   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918617Z","level":"info","event":"2    41101          1 2025-07-08 17:45:00   0.32   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918770Z","level":"info","event":"3    40902          2 2025-07-08 17:15:00   0.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.918917Z","level":"info","event":"4    41002          2 2025-07-08 17:30:00   0.18   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919056Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919201Z","level":"info","event":"295  41099         99 2025-07-08 17:30:00   0.20   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919360Z","level":"info","event":"296  41199         99 2025-07-08 17:45:00   0.29   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919464Z","level":"info","event":"297  41000        100 2025-07-08 17:15:00   0.29   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919553Z","level":"info","event":"298  41100        100 2025-07-08 17:30:00   0.13   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919642Z","level":"info","event":"299  41200        100 2025-07-08 17:45:00   0.23   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919730Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.919818Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.932156Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.932989","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T01:39:35.966913Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.967170Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T01:39:35.967334Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
