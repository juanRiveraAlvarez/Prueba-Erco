{"timestamp":"2025-07-14T04:24:50.883337","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T04:24:50.884443","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T04:24:50.951107Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:50.951453Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:50.951666Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:50.951857Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:50.921549","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T04:24:51.030719Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.030990Z","level":"info","event":"0    47659          1 2025-07-07 17:30:00  221.03   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.031144Z","level":"info","event":"1    47660          1 2025-07-07 17:45:00  221.35   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.031311Z","level":"info","event":"2    84601          1 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.031462Z","level":"info","event":"3    48023          2 2025-07-07 17:30:00  221.90   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.031735Z","level":"info","event":"4    48024          2 2025-07-07 17:45:00  222.24   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.031873Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032001Z","level":"info","event":"295  83332         99 2025-07-07 17:45:00  225.66   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032127Z","level":"info","event":"296  84699         99 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032252Z","level":"info","event":"297  83695        100 2025-07-07 17:30:00  210.42   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032378Z","level":"info","event":"298  83696        100 2025-07-07 17:45:00  210.67   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032514Z","level":"info","event":"299  84700        100 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032646Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.032797Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.051398Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.051904","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T04:24:51.107938Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.108187Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T04:24:51.108328Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
