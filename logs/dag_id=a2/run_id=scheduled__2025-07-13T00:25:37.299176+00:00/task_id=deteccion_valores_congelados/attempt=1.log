{"timestamp":"2025-07-13T00:25:39.059157","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:25:39.059907","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:25:39.119782Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.120039Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.120177Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.120297Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.087740","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:25:39.187358Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.187627Z","level":"info","event":"0    232484          1 2025-07-08 11:00:00   0.50   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.187764Z","level":"info","event":"1    232584          1 2025-07-08 11:15:00   1.01   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.187898Z","level":"info","event":"2    232684          1 2025-07-08 11:30:00   0.59   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188072Z","level":"info","event":"3    232485          2 2025-07-08 11:00:00   1.23   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188273Z","level":"info","event":"4    232585          2 2025-07-08 11:15:00   0.68   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188446Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188609Z","level":"info","event":"295  232682         99 2025-07-08 11:15:00   0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188774Z","level":"info","event":"296  232782         99 2025-07-08 11:30:00   0.84   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.188938Z","level":"info","event":"297  232583        100 2025-07-08 11:00:00   0.65   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.189068Z","level":"info","event":"298  232683        100 2025-07-08 11:15:00   1.22   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.189244Z","level":"info","event":"299  232783        100 2025-07-08 11:30:00   0.82   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.189383Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.189514Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.207502Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.208725","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:25:39.236965Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.237248Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:25:39.237418Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
