{"timestamp":"2025-07-13T15:28:48.649268","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:28:48.650107","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:28:48.691066Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.691294Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.691413Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.691519Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.675476","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:28:48.729325Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.729573Z","level":"info","event":"0    234042          1 2025-07-07 17:30:00  218.57   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.729728Z","level":"info","event":"1    234043          1 2025-07-07 17:45:00  218.75   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.729871Z","level":"info","event":"2    270384          1 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730017Z","level":"info","event":"3    234406          2 2025-07-07 17:30:00  218.12   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730155Z","level":"info","event":"4    234407          2 2025-07-07 17:45:00  218.43   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730291Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730425Z","level":"info","event":"295  269715         99 2025-07-07 17:45:00  220.68   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730561Z","level":"info","event":"296  270482         99 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730695Z","level":"info","event":"297  270078        100 2025-07-07 17:30:00  225.09   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730830Z","level":"info","event":"298  270079        100 2025-07-07 17:45:00  225.25   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.730964Z","level":"info","event":"299  270483        100 2025-07-08 07:00:00    0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.731099Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.731233Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.737414Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.737993","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:28:48.771471Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.771660Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:28:48.771757Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
