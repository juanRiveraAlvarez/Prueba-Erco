{"timestamp":"2025-07-14T00:47:45.127431","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T00:47:45.128624","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T00:47:45.189772Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.190067Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.190277Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.190467Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.163372","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T00:47:45.209829Z","level":"info","event":"       id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210140Z","level":"info","event":"0     358          1 2025-07-07 17:15:00  216.65   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210302Z","level":"info","event":"1     359          1 2025-07-07 17:30:00  216.95   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210431Z","level":"info","event":"2     360          1 2025-07-07 17:45:00  217.30   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210557Z","level":"info","event":"3     722          2 2025-07-07 17:15:00  235.13   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210680Z","level":"info","event":"4     723          2 2025-07-07 17:30:00  235.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.210812Z","level":"info","event":"..    ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211089Z","level":"info","event":"85  10551         29 2025-07-07 17:30:00  216.92   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211263Z","level":"info","event":"86  10552         29 2025-07-07 17:45:00  217.29   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211456Z","level":"info","event":"87  10654         30 2025-07-02 17:15:00   65.58   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211614Z","level":"info","event":"88  10655         30 2025-07-02 17:30:00   65.79   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211747Z","level":"info","event":"89  10656         30 2025-07-02 17:45:00   66.04   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211867Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.211986Z","level":"info","event":"[90 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.216349Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.217398","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T00:47:45.250644Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.251041Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:47:45.251204Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
