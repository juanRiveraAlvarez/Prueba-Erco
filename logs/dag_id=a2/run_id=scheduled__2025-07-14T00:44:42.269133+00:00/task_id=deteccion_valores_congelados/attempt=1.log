{"timestamp":"2025-07-14T00:44:43.710765","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T00:44:43.711455","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T00:44:43.767968Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768193Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768294Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768386Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768474Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768565Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768655Z","level":"info","event":"Task:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768742Z","level":"info","event":"Failure caused by Execution failed on sql '","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768826Z","level":"info","event":"            SELECT *","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.768916Z","level":"info","event":"            FROM (","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769003Z","level":"info","event":"            SELECT","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769094Z","level":"info","event":"                id,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769185Z","level":"info","event":"                device_id,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769275Z","level":"info","event":"                timestamp,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769360Z","level":"info","event":"                value,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769450Z","level":"info","event":"                ROW_NUMBER() OVER (PARTITION BY device_id ORDER BY timestamp DESC) AS rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769537Z","level":"info","event":"            FROM record","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769620Z","level":"info","event":"            WHERE EXTRACT(HOUR FROM timestamp) BETWEEN 7 AND 17","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769702Z","level":"info","event":"            ) sub","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769785Z","level":"info","event":"            WHERE rn <= 3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769866Z","level":"info","event":"            ORDER BY device_id, timestamp;","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.769950Z","level":"info","event":"        ': relation \"record\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.770033Z","level":"info","event":"LINE 10:             FROM record","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.770114Z","level":"info","event":"                          ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.770197Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:44:43.742715","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T00:44:43.743902","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DatabaseError","exc_value":"Execution failed on sql '\n            SELECT *\n            FROM (\n            SELECT\n                id,\n                device_id,\n                timestamp,\n                value,\n                ROW_NUMBER() OVER (PARTITION BY device_id ORDER BY timestamp DESC) AS rn\n            FROM record\n            WHERE EXTRACT(HOUR FROM timestamp) BETWEEN 7 AND 17\n            ) sub\n            WHERE rn <= 3\n            ORDER BY device_id, timestamp;\n        ': relation \"record\" does not exist\nLINE 10:             FROM record\n                          ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/dag_analisis.py","lineno":69,"name":"deteccion_valores_congelados"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":654,"name":"read_sql"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2326,"name":"read_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2274,"name":"execute"}],"is_group":false,"exceptions":[]},{"exc_type":"UndefinedTable","exc_value":"relation \"record\" does not exist\nLINE 10:             FROM record\n                          ^\n","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2262,"name":"execute"}],"is_group":false,"exceptions":[]}]}
