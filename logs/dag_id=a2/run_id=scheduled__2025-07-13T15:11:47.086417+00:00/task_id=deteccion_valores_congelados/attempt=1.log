{"timestamp":"2025-07-13T15:11:49.928780","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:11:49.936612","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:11:50.015126Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.015495Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.015746Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.015963Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:49.997221","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:11:50.085447Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.085843Z","level":"info","event":"0   234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.086106Z","level":"info","event":"1   234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.086340Z","level":"info","event":"2   234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.086573Z","level":"info","event":"3   234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.086800Z","level":"info","event":"4   234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.087023Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.087244Z","level":"info","event":"67  242050         23 2025-07-07 17:30:00  216.49   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.087577Z","level":"info","event":"68  242051         23 2025-07-07 17:45:00  216.63   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.087794Z","level":"info","event":"69  242067         24 2025-07-01 08:45:00    2.92   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.088001Z","level":"info","event":"70  242068         24 2025-07-01 09:00:00    3.37   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.088219Z","level":"info","event":"71  242069         24 2025-07-01 09:15:00    4.05   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.088439Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.088654Z","level":"info","event":"[72 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.089004Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.088708","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:11:50.132388Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.132743Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:11:50.132947Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
