{"timestamp":"2025-07-13T17:24:57.745672","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T17:24:57.746371","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T17:24:57.798294Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:57.798499Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:57.798608Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:57.798707Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:57.772569","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T17:24:58.234344Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.234590Z","level":"info","event":"0    275484          1 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.234740Z","level":"info","event":"1    275584          1 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.234876Z","level":"info","event":"2    275684          1 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235013Z","level":"info","event":"3    275485          2 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235144Z","level":"info","event":"4    275585          2 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235297Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235432Z","level":"info","event":"295  275682         99 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235562Z","level":"info","event":"296  275782         99 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235691Z","level":"info","event":"297  275583        100 2025-07-09 07:00:00    0.0   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235819Z","level":"info","event":"298  275683        100 2025-07-09 07:15:00    0.0   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.235946Z","level":"info","event":"299  275783        100 2025-07-09 07:30:00    0.0   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.236075Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.236204Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.281616Z","level":"info","event":"Hay congelados  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.282689","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T17:24:58.309046Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.309288Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T17:24:58.309412Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
