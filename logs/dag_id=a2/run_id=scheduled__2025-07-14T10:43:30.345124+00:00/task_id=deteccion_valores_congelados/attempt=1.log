{"timestamp":"2025-07-14T10:43:32.340661","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:43:32.341791","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:43:32.390512Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.390782Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.390944Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.391181Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.372825","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:43:32.455921Z","level":"info","event":"0      158964","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.457276Z","level":"info","event":"1      158965","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.457482Z","level":"info","event":"2      158966","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.457630Z","level":"info","event":"3      159328","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.457764Z","level":"info","event":"4      159329","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458123Z","level":"info","event":"        ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458291Z","level":"info","event":"295    194637","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458434Z","level":"info","event":"296    194638","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458581Z","level":"info","event":"297    195000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458736Z","level":"info","event":"298    195001","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.458869Z","level":"info","event":"299    195002","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.459000Z","level":"info","event":"Name: id, Length: 300, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.470809Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.471641","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:43:32.504527Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.504770Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:43:32.504924Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
