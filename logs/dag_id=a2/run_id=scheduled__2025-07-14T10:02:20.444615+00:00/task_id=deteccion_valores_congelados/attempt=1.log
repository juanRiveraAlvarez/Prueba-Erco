{"timestamp":"2025-07-14T10:02:22.174975","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:02:22.175457","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:02:22.223139Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.223513Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.223749Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.223979Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.195240","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:02:22.242904Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243163Z","level":"info","event":"0    122558          1 2025-07-07 17:15:00  220.08   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243356Z","level":"info","event":"1    122559          1 2025-07-07 17:30:00  220.39   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243519Z","level":"info","event":"2    122560          1 2025-07-07 17:45:00  220.65   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243681Z","level":"info","event":"3    122922          2 2025-07-07 17:15:00  205.88   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243834Z","level":"info","event":"4    122923          2 2025-07-07 17:30:00  206.23   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.243982Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244129Z","level":"info","event":"295  158231         99 2025-07-07 17:30:00  231.85   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244275Z","level":"info","event":"296  158232         99 2025-07-07 17:45:00  232.13   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244421Z","level":"info","event":"297  158594        100 2025-07-07 17:15:00  245.25   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244568Z","level":"info","event":"298  158595        100 2025-07-07 17:30:00  245.56   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244715Z","level":"info","event":"299  158596        100 2025-07-07 17:45:00  245.83   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.244864Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.245011Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.250416Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.250904","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:02:22.271909Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.272124Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:02:22.272261Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
