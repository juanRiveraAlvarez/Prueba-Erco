{"timestamp":"2025-07-14T02:15:36.703612","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T02:15:36.704401","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T02:15:36.729399","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T02:15:36.768414Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.768662Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.768808Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.768945Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.829830Z","level":"info","event":"        id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830073Z","level":"info","event":"0    44501          1 2025-07-09 13:30:00   0.99   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830215Z","level":"info","event":"1    44601          1 2025-07-09 13:45:00   1.15   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830354Z","level":"info","event":"2    44701          1 2025-07-09 14:00:00   0.53   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830496Z","level":"info","event":"3    44502          2 2025-07-09 13:30:00   0.55   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830630Z","level":"info","event":"4    44602          2 2025-07-09 13:45:00   1.33   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830768Z","level":"info","event":"..     ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.830901Z","level":"info","event":"295  44699         99 2025-07-09 13:45:00   1.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831035Z","level":"info","event":"296  44799         99 2025-07-09 14:00:00   0.90   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831165Z","level":"info","event":"297  44600        100 2025-07-09 13:30:00   1.27   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831343Z","level":"info","event":"298  44700        100 2025-07-09 13:45:00   0.94   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831468Z","level":"info","event":"299  44800        100 2025-07-09 14:00:00   1.17   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831594Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.831720Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.845048Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.846275","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T02:15:36.876134Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.876400Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T02:15:36.876575Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
