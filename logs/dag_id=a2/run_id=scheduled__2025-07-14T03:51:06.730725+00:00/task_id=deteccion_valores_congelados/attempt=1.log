{"timestamp":"2025-07-14T03:51:09.172860","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T03:51:09.176136","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T03:51:09.252183Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.252522Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.252726Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.252922Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.233898","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T03:51:09.312320Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.312703Z","level":"info","event":"0    47658          1 2025-07-07 17:15:00  220.76   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.312946Z","level":"info","event":"1    47659          1 2025-07-07 17:30:00  221.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.313172Z","level":"info","event":"2    47660          1 2025-07-07 17:45:00  221.35   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.313399Z","level":"info","event":"3    48022          2 2025-07-07 17:15:00  221.72   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.313670Z","level":"info","event":"4    48023          2 2025-07-07 17:30:00  221.90   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.313882Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.314099Z","level":"info","event":"115  61491         39 2025-07-07 17:30:00  232.38   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.314323Z","level":"info","event":"116  61492         39 2025-07-07 17:45:00  232.74   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.314541Z","level":"info","event":"117  61681         40 2025-07-04 13:00:00  104.07   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.314752Z","level":"info","event":"118  61682         40 2025-07-04 13:15:00  104.73   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.314959Z","level":"info","event":"119  61683         40 2025-07-04 13:30:00  105.57   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.315166Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.315509Z","level":"info","event":"[120 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.324257Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.327141","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T03:51:09.377470Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.377789Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:51:09.377971Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
