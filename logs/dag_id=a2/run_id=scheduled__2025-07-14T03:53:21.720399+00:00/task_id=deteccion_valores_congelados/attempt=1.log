{"timestamp":"2025-07-14T03:53:22.951599","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T03:53:22.952495","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T03:53:22.999462Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:22.999689Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:22.999827Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:22.999953Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:22.978689","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T03:53:23.030724Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031006Z","level":"info","event":"0    47658          1 2025-07-07 17:15:00  220.76   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031174Z","level":"info","event":"1    47659          1 2025-07-07 17:30:00  221.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031370Z","level":"info","event":"2    47660          1 2025-07-07 17:45:00  221.35   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031589Z","level":"info","event":"3    48022          2 2025-07-07 17:15:00  221.72   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031755Z","level":"info","event":"4    48023          2 2025-07-07 17:30:00  221.90   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.031914Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032079Z","level":"info","event":"187  70227         63 2025-07-07 17:30:00  214.38   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032239Z","level":"info","event":"188  70228         63 2025-07-07 17:45:00  214.65   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032397Z","level":"info","event":"189  70322         64 2025-07-02 15:15:00   67.00   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032555Z","level":"info","event":"190  70323         64 2025-07-02 15:30:00   67.59   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032716Z","level":"info","event":"191  70324         64 2025-07-02 15:45:00   67.59   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.032875Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.033035Z","level":"info","event":"[192 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.040341Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.041323","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T03:53:23.068909Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.069174Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T03:53:23.069349Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
