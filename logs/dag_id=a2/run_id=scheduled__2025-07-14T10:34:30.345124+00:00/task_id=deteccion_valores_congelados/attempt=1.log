{"timestamp":"2025-07-14T10:34:32.432157","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:34:32.434025","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:34:32.493995Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.494250Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.494427Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.494630Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.470667","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:34:32.535493Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.535958Z","level":"info","event":"0    158964          1 2025-07-07 17:15:00  209.53   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.536179Z","level":"info","event":"1    158965          1 2025-07-07 17:30:00  209.69   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.536357Z","level":"info","event":"2    158966          1 2025-07-07 17:45:00  209.87   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.536572Z","level":"info","event":"3    159328          2 2025-07-07 17:15:00  229.83   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.536756Z","level":"info","event":"4    159329          2 2025-07-07 17:30:00  229.99   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.536935Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.537120Z","level":"info","event":"106  171705         36 2025-07-07 17:30:00  225.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.537296Z","level":"info","event":"107  171706         36 2025-07-07 17:45:00  225.84   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.537467Z","level":"info","event":"108  172016         37 2025-07-06 17:15:00  176.38   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.537636Z","level":"info","event":"109  172017         37 2025-07-06 17:30:00  176.72   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.537822Z","level":"info","event":"110  172018         37 2025-07-06 17:45:00  177.08   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.538004Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.538253Z","level":"info","event":"[111 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.547525Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.548803","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:34:32.584379Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.584722Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:34:32.584992Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
