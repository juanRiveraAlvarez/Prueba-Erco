{"timestamp":"2025-07-13T15:21:49.552626","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:21:49.553593","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:21:49.617971Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.619011Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.619246Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.619444Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.597519","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:21:49.700392Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.700884Z","level":"info","event":"0    234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.701346Z","level":"info","event":"1    234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.701756Z","level":"info","event":"2    234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.702024Z","level":"info","event":"3    234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.702276Z","level":"info","event":"4    234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.702475Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.702704Z","level":"info","event":"286  268622         96 2025-07-07 17:30:00  199.17   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.702952Z","level":"info","event":"287  268623         96 2025-07-07 17:45:00  199.42   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.703183Z","level":"info","event":"288  268881         97 2025-07-05 17:15:00  162.11   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.703551Z","level":"info","event":"289  268882         97 2025-07-05 17:30:00  162.45   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.703765Z","level":"info","event":"290  268883         97 2025-07-05 17:45:00  162.81   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.703962Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.704186Z","level":"info","event":"[291 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.718560Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.720361","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:21:49.767170Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.770706Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:21:49.770970Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
