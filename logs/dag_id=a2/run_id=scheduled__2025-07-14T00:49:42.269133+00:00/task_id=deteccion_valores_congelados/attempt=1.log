{"timestamp":"2025-07-14T00:49:44.153892","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T00:49:44.154516","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T00:49:44.180654","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T00:49:44.206774Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.206967Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.207073Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.207157Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.218591Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.218776Z","level":"info","event":"0      358          1 2025-07-07 17:15:00  216.65   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.218862Z","level":"info","event":"1      359          1 2025-07-07 17:30:00  216.95   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.218946Z","level":"info","event":"2      360          1 2025-07-07 17:45:00  217.30   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219033Z","level":"info","event":"3      722          2 2025-07-07 17:15:00  235.13   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219116Z","level":"info","event":"4      723          2 2025-07-07 17:30:00  235.29   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219198Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219342Z","level":"info","event":"145  17831         49 2025-07-07 17:30:00  208.03   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219434Z","level":"info","event":"146  17832         49 2025-07-07 17:45:00  208.26   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219535Z","level":"info","event":"147  18038         50 2025-07-04 17:15:00  123.33   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219620Z","level":"info","event":"148  18039         50 2025-07-04 17:30:00  123.47   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219701Z","level":"info","event":"149  18040         50 2025-07-04 17:45:00  123.72   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219784Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.219866Z","level":"info","event":"[150 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.223513Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.224134","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T00:49:44.247590Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.247794Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T00:49:44.247903Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
