{"timestamp":"2025-07-13T15:17:50.637671","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T15:17:50.639420","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T15:17:50.729257Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.729647Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.729897Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.730134Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.696501","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T15:17:50.822263Z","level":"info","event":"         id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.822695Z","level":"info","event":"0    234041          1 2025-07-07 17:15:00  218.22   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.822971Z","level":"info","event":"1    234042          1 2025-07-07 17:30:00  218.57   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.823228Z","level":"info","event":"2    234043          1 2025-07-07 17:45:00  218.75   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.823521Z","level":"info","event":"3    234405          2 2025-07-07 17:15:00  217.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.823785Z","level":"info","event":"4    234406          2 2025-07-07 17:30:00  218.12   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.824042Z","level":"info","event":"..      ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.824295Z","level":"info","event":"208  259158         70 2025-07-07 17:30:00  221.81   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.824537Z","level":"info","event":"209  259159         70 2025-07-07 17:45:00  222.06   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.824787Z","level":"info","event":"210  259178         71 2025-07-01 09:30:00    5.66   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.825038Z","level":"info","event":"211  259179         71 2025-07-01 09:45:00    6.69   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.825298Z","level":"info","event":"212  259180         71 2025-07-01 10:00:00    7.49   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.825550Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.825800Z","level":"info","event":"[213 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.838974Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.840269","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T15:17:50.890192Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.890664Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T15:17:50.890904Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
