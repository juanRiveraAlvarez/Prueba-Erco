{"timestamp":"2025-07-14T10:33:33.665296","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T10:33:33.666384","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T10:33:33.721994Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.722297Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.722488Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.722666Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.703627","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-14T10:33:33.759548Z","level":"info","event":"        id  device_id           timestamp   value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.759870Z","level":"info","event":"0   158964          1 2025-07-07 17:15:00  209.53   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.760084Z","level":"info","event":"1   158965          1 2025-07-07 17:30:00  209.69   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.760264Z","level":"info","event":"2   158966          1 2025-07-07 17:45:00  209.87   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.760469Z","level":"info","event":"3   159328          2 2025-07-07 17:15:00  229.83   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.760683Z","level":"info","event":"4   159329          2 2025-07-07 17:30:00  229.99   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.760893Z","level":"info","event":"..     ...        ...                 ...     ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761069Z","level":"info","event":"82  168793         28 2025-07-07 17:30:00  228.91   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761214Z","level":"info","event":"83  168794         28 2025-07-07 17:45:00  229.09   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761353Z","level":"info","event":"84  168889         29 2025-07-02 15:30:00   61.05   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761493Z","level":"info","event":"85  168890         29 2025-07-02 15:45:00   61.61   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761631Z","level":"info","event":"86  168891         29 2025-07-02 16:00:00   62.34   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761772Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.761910Z","level":"info","event":"[87 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.765770Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.766703","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T10:33:33.800938Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.801251Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T10:33:33.801450Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
