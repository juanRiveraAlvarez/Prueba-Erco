{"timestamp":"2025-07-13T00:21:38.825810","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T00:21:38.826554","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T00:21:38.874939Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.875212Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.875363Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.875524Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.855720","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T00:21:38.971000Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.971303Z","level":"info","event":"0    232084          1 2025-07-08 10:00:00   0.87   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.971496Z","level":"info","event":"1    232184          1 2025-07-08 10:15:00   0.00   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.971637Z","level":"info","event":"2    232284          1 2025-07-08 10:30:00   0.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.971765Z","level":"info","event":"3    232085          2 2025-07-08 10:00:00   1.23   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.971880Z","level":"info","event":"4    232185          2 2025-07-08 10:15:00   1.04   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972021Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972184Z","level":"info","event":"295  232282         99 2025-07-08 10:15:00   0.94   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972309Z","level":"info","event":"296  232382         99 2025-07-08 10:30:00   0.85   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972617Z","level":"info","event":"297  232183        100 2025-07-08 10:00:00   0.64   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972793Z","level":"info","event":"298  232283        100 2025-07-08 10:15:00   0.87   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.972931Z","level":"info","event":"299  232383        100 2025-07-08 10:30:00   1.29   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.973095Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.973267Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.989052Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:38.990396","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T00:21:39.023542Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:39.023836Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T00:21:39.023986Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
