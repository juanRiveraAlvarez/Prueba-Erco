{"timestamp":"2025-07-13T06:25:40.460304","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T06:25:40.461386","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T06:25:40.516786Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.517057Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.517237Z","level":"info","event":"Current task name:deteccion_valores_congelados","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.517368Z","level":"info","event":"Dag name:a2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.495589","level":"warning","event":"/opt/airflow/dags/dag_analisis.py:69: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(query, conn)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T06:25:40.584010Z","level":"info","event":"         id  device_id           timestamp  value  rn","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584260Z","level":"info","event":"0    232684          1 2025-07-08 11:30:00   0.59   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584393Z","level":"info","event":"1    232784          1 2025-07-08 11:45:00   1.16   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584514Z","level":"info","event":"2    232884          1 2025-07-08 12:00:00   1.00   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584635Z","level":"info","event":"3    232685          2 2025-07-08 11:30:00   0.86   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584752Z","level":"info","event":"4    232785          2 2025-07-08 11:45:00   0.99   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584866Z","level":"info","event":"..      ...        ...                 ...    ...  ..","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.584977Z","level":"info","event":"295  232882         99 2025-07-08 11:45:00   1.34   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585087Z","level":"info","event":"296  232982         99 2025-07-08 12:00:00   0.86   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585234Z","level":"info","event":"297  232783        100 2025-07-08 11:30:00   0.82   3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585361Z","level":"info","event":"298  232883        100 2025-07-08 11:45:00   1.24   2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585474Z","level":"info","event":"299  232983        100 2025-07-08 12:00:00   0.57   1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585584Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.585697Z","level":"info","event":"[300 rows x 5 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.600883Z","level":"info","event":"todo bien","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.601872","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-13T06:25:40.637793Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.638066Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T06:25:40.638216Z","level":"info","event":"Task operator:<Task(PythonOperator): deteccion_valores_congelados>","chan":"stdout","logger":"task"}
