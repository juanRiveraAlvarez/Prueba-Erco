{"timestamp":"2025-07-12T23:17:22.010712","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-12T23:17:22.011704","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_analisis.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-12T23:17:22.027868","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-12T23:17:22.086718Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.087081Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.087357Z","level":"info","event":"Current task name:generar_registros_dispositivos","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.087548Z","level":"info","event":"Dag name:a1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.087708Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.087864Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T23:17:22.088039Z","level":"info","event":"Task operator:<Task(PythonOperator): generar_registros_dispositivos>","chan":"stdout","logger":"task"}
